How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    If it worked before, then the difference causes the bug. We can eliminate it step-by-step.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If I can see the entire history, then I will not make the same bugs again. And see the entire process from the beginning. 
And help me remember for the aim of the code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

If I manually commit, there is the chance that I forgot it and the commit will be too big. But if I plan the committing well, then it is the best way to tag the
repository.
Automatic savings can cause too small commits.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Program code: multiple files are connected, one logical change modifies multiple files.
Google docs: files are independent, they can be handled separately.

How can you use the commands git log and git diff to view the history of files?

    git log: view all the commits, with description
	git log --stat: shows the minus/plus lines in the files
	git diff id1 id2: shows two commits differences in every file

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
